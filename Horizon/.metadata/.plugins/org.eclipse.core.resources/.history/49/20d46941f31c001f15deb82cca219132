package com.app.controller;

import javax.validation.Valid;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.app.dto.SignInDto;
import com.app.dto.SignInResponseDto;
import com.app.dto.SigninResponse;
import com.app.entities.Customer;
import com.app.security.JwtUtils;
import com.app.service.SignInService;

@RestController
public class SignInContoller {

	@Autowired
	private SignInService loginService;
	@Autowired
	private AuthenticationManager mgr;


	@CrossOrigin(origins = "*")
	@PostMapping("/signIn")
	public ResponseEntity<?> signIn(@RequestBody @Valid SignInDto userCredentials) {
		Authentication verifiedAuth = mgr.authenticate(
				new UsernamePasswordAuthenticationToken(userCredentials.getEmail(), userCredentials.getPassword()));
		System.out.println(verifiedAuth.getClass());// Custom user details
		return loginService.validateUser(userCredentials.getEmail(), userCredentials.getPassword(), verifiedAuth);
	}

}
